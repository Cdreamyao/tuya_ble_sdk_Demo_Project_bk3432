<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\bk3432_ble_app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\bk3432_ble_app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Jul 22 17:45:26 2020
<BR><P>
<H3>Maximum Stack Usage =        860 bytes + Unknown(Functions without stacksize, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
app_tuya_event_handler &rArr; tuya_ble_event_process &rArr; tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_handle_dev_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[44]">sys_Reset</a>
 <LI><a href="#[1]">Undefined</a>
 <LI><a href="#[2]">SoftwareInterrupt</a>
 <LI><a href="#[3]">PrefetchAbort</a>
 <LI><a href="#[4]">DataAbort</a>
 <LI><a href="#[6]">IRQ_Handler</a>
 <LI><a href="#[5]">sys_reserved</a>
 <LI><a href="#[7]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">DataAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[7]">FIQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[6]">IRQ_Handler</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[3]">PrefetchAbort</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1b]">Read_Uart_Buf</a> from uart.o(i.Read_Uart_Buf) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[2]">SoftwareInterrupt</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[1]">Undefined</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[8]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[8]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[2d]">app_tuya_add_service</a> from app_tuya_service.o(i.app_tuya_add_service) referenced from app.o(.constdata)
 <LI><a href="#[3c]">app_tuya_connect_monitor_timer_handler</a> from app_task.o(i.app_tuya_connect_monitor_timer_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[3e]">app_tuya_event_handler</a> from app_task.o(i.app_tuya_event_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[3f]">app_tuya_msg_dflt_handler</a> from app_tuya_service.o(i.app_tuya_msg_dflt_handler) referenced from app_tuya_service.o(.constdata)
 <LI><a href="#[3d]">app_tuya_prod_monitor_timer_handler</a> from app_task.o(i.app_tuya_prod_monitor_timer_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[2e]">appm_msg_handler</a> from app_task.o(i.appm_msg_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[19]">assert_err</a> from arch_main.o(i.assert_err) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[1a]">assert_param</a> from arch_main.o(i.assert_param) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[34]">gapc_cmp_evt_handler</a> from app_task.o(i.gapc_cmp_evt_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[33]">gapc_connection_req_ind_handler</a> from app_task.o(i.gapc_connection_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[35]">gapc_disconnect_ind_handler</a> from app_task.o(i.gapc_disconnect_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[31]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(i.gapc_get_dev_info_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[37]">gapc_le_pkt_size_ind_handler</a> from app_task.o(i.gapc_le_pkt_size_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[3a]">gapc_param_update_req_ind_handler</a> from app_task.o(i.gapc_param_update_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[38]">gapc_param_updated_ind_handler</a> from app_task.o(i.gapc_param_updated_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[32]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(i.gapc_set_dev_info_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[3b]">gapc_update_conn_param_req_ind_handler</a> from app_task.o(i.gapc_update_conn_param_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[30]">gapm_cmp_evt_handler</a> from app_task.o(i.gapm_cmp_evt_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[2f]">gapm_device_ready_ind_handler</a> from app_task.o(i.gapm_device_ready_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[36]">gapm_profile_added_ind_handler</a> from app_task.o(i.gapm_profile_added_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[29]">gattc_att_info_req_ind_handler</a> from tuya_service_task.o(i.gattc_att_info_req_ind_handler) referenced from tuya_service_task.o(.constdata)
 <LI><a href="#[2c]">gattc_cmp_evt_handler</a> from tuya_service_task.o(i.gattc_cmp_evt_handler) referenced from tuya_service_task.o(.constdata)
 <LI><a href="#[39]">gattc_mtu_changed_ind_handler</a> from app_task.o(i.gattc_mtu_changed_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[2b]">gattc_read_req_ind_handler</a> from tuya_service_task.o(i.gattc_read_req_ind_handler) referenced from tuya_service_task.o(.constdata)
 <LI><a href="#[2a]">gattc_write_req_ind_handler</a> from tuya_service_task.o(i.gattc_write_req_ind_handler) referenced from tuya_service_task.o(.constdata)
 <LI><a href="#[18]">platform_reset</a> from arch_main.o(i.platform_reset) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[15]">prf_add_profile</a> from prf.o(i.prf_add_profile) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[14]">prf_cleanup</a> from prf.o(i.prf_cleanup) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[13]">prf_create</a> from prf.o(i.prf_create) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[10]">prf_get_id_from_task</a> from prf.o(i.prf_get_id_from_task) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[11]">prf_get_task_from_id</a> from prf.o(i.prf_get_task_from_id) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[12]">prf_init</a> from prf.o(i.prf_init) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[e]">rf_force_agc_enable</a> from rf_xvr.o(i.rf_force_agc_enable) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[d]">rf_reset</a> from rf_xvr.o(i.rf_reset) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[9]">rf_rpl_reg_rd</a> from rf_xvr.o(i.rf_rpl_reg_rd) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[a]">rf_rpl_reg_wr</a> from rf_xvr.o(i.rf_rpl_reg_wr) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[f]">rf_rssi_convert</a> from rf_xvr.o(i.rf_rssi_convert) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[c]">rf_sleep</a> from rf_xvr.o(i.rf_sleep) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[b]">rf_txpwr_dbm_get</a> from rf_xvr.o(i.rf_txpwr_dbm_get) referenced from rf_xvr.o(i.rf_init)
 <LI><a href="#[16]">rwble_hl_reset</a> from rwble_hl.o(i.rwble_hl_reset) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[17]">rwip_reset</a> from rwip.o(i.rwip_reset) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[44]">sys_Reset</a> from boot_handlers.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[5]">sys_reserved</a> from boot_vectors.o(SYS_BOOT) referenced from boot_vectors.o(SYS_BOOT)
 <LI><a href="#[22]">tuya_ble_gatt_send_data_handle</a> from tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_handle) referenced from tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_handle)
 <LI><a href="#[21]">tuya_cb_handler</a> from app_tuya.o(i.tuya_cb_handler) referenced from app_tuya.o(i.tuya_ble_app_init)
 <LI><a href="#[40]">tuyas_char_notify_level_ntf_cfg_ind_handler</a> from app_tuya_service.o(i.tuyas_char_notify_level_ntf_cfg_ind_handler) referenced from app_tuya_service.o(.constdata)
 <LI><a href="#[41]">tuyas_char_notify_level_upd_handler</a> from app_tuya_service.o(i.tuyas_char_notify_level_upd_handler) referenced from app_tuya_service.o(.constdata)
 <LI><a href="#[28]">tuyas_char_notify_level_upd_req_handler</a> from tuya_service_task.o(i.tuyas_char_notify_level_upd_req_handler) referenced from tuya_service_task.o(.constdata)
 <LI><a href="#[43]">tuyas_char_notify_period_ntf_handler</a> from app_tuya_service.o(i.tuyas_char_notify_period_ntf_handler) referenced from app_tuya_service.o(.constdata)
 <LI><a href="#[42]">tuyas_char_write_writer_req_handler</a> from app_tuya_service.o(i.tuyas_char_write_writer_req_handler) referenced from app_tuya_service.o(.constdata)
 <LI><a href="#[27]">tuyas_cleanup</a> from tuya_service.o(i.tuyas_cleanup) referenced from tuya_service.o(.constdata)
 <LI><a href="#[26]">tuyas_create</a> from tuya_service.o(i.tuyas_create) referenced from tuya_service.o(.constdata)
 <LI><a href="#[25]">tuyas_destroy</a> from tuya_service.o(i.tuyas_destroy) referenced from tuya_service.o(.constdata)
 <LI><a href="#[24]">tuyas_init</a> from tuya_service.o(i.tuyas_init) referenced from tuya_service.o(.constdata)
 <LI><a href="#[1c]">uart_clear_rxfifo</a> from uart.o(i.uart_clear_rxfifo) referenced from arch_main.o(i.rom_env_init)
 <LI><a href="#[20]">uart_flow_off</a> from uart.o(i.uart_flow_off) referenced from arch_main.o(i.rwip_eif_api_init)
 <LI><a href="#[1f]">uart_flow_on</a> from uart.o(i.uart_flow_on) referenced from arch_main.o(i.rwip_eif_api_init)
 <LI><a href="#[23]">uart_printf</a> from uart.o(i.uart_printf) referenced from uart.o(i.uart_init)
 <LI><a href="#[1d]">uart_read</a> from uart.o(i.uart_read) referenced from arch_main.o(i.rwip_eif_api_init)
 <LI><a href="#[1e]">uart_write</a> from uart.o(i.uart_write) referenced from arch_main.o(i.rwip_eif_api_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[17c]"></a>uart_stack_register</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[17e]"></a>Undefined_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined (via Veneer)
</UL>

<P><STRONG><a name="[17f]"></a>SoftwareInterrupt_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt (via Veneer)
</UL>

<P><STRONG><a name="[180]"></a>PrefetchAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort (via Veneer)
</UL>

<P><STRONG><a name="[181]"></a>DataAbort_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort (via Veneer)
</UL>

<P><STRONG><a name="[182]"></a>Reserved_Exception</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reserved (via Veneer)
</UL>

<P><STRONG><a name="[f0]"></a>ke_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[f4]"></a>ke_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[f6]"></a>ke_event_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
</UL>

<P><STRONG><a name="[f1]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[169]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
</UL>

<P><STRONG><a name="[153]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_init
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_destroy
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>

<P><STRONG><a name="[7d]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_send_data
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_add_service
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_notify_value_lvl
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_message_send
</UL>

<P><STRONG><a name="[7e]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_send_data
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_device_ready_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_add_service
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_notify_value_lvl
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_message_send
</UL>

<P><STRONG><a name="[8c]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[8d]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_char_notify_level_upd_req_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_init
</UL>

<P><STRONG><a name="[90]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_char_notify_level_upd_req_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
</UL>

<P><STRONG><a name="[c7]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
</UL>

<P><STRONG><a name="[ae]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_start
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset_time_delay_ms
</UL>

<P><STRONG><a name="[130]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_stop
</UL>

<P><STRONG><a name="[e1]"></a>em_buf_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[e3]"></a>llc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[ef]"></a>llc_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
</UL>

<P><STRONG><a name="[e2]"></a>lld_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[ee]"></a>lld_core_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
</UL>

<P><STRONG><a name="[ec]"></a>lld_crypt_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[eb]"></a>lld_evt_timer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[e7]"></a>lld_evt_end_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[e9]"></a>lld_evt_rx_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[e4]"></a>llm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[e5]"></a>llm_ble_ready</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
</UL>

<P><STRONG><a name="[f3]"></a>ea_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[e6]"></a>ea_finetimer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[ea]"></a>ea_sw_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>

<P><STRONG><a name="[dd]"></a>gapm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[179]"></a>attm_svc_create_db</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_init
</UL>

<P><STRONG><a name="[17a]"></a>attm_att_set_permission</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_init
</UL>

<P><STRONG><a name="[dc]"></a>attm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[de]"></a>gattm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[df]"></a>l2cm_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[f2]"></a>hci_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[f5]"></a>hci_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset_time_delay_ms
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_decrease
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_enqueue
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dequeue
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_is_leap_year
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8e]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rand_generator
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[cd]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_cb_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_send_data
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_notify_value_lvl
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt (via BLX)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_info_update_evt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rand_generator
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption (via BLX)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_decryption (via BLX)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_send_pkg_encode
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_recv_pkg_decode
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_write_req
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_data_unpack
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_file_info_req
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_data_req
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_report
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate (via BLX)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt (via BLX)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt (via BLX)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_Add_Pkcs (via BLX)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_get
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_enqueue
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dequeue
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_hid
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update_ret
</UL>

<P><STRONG><a name="[fd]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_message_send
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_char_notify_period_ntf_handler
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_data_unpack
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_encrypt_buffer
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_decrypt_buffer
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish_ret
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_clear_rxfifo
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_cb_handler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_init
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt (via BLX)
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_file_info_req
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_end_req
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate (via BLX)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_free
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish_ret
</UL>

<P><STRONG><a name="[11b]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate (via BLX)
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_hid
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
</UL>

<P><STRONG><a name="[5c]"></a>__ARM_clz</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue (via BLX)
</UL>

<P><STRONG><a name="[c3]"></a>__ARM_common_disable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_enter_critical (via BLX)
</UL>

<P><STRONG><a name="[c4]"></a>__ARM_common_disable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via BLX)
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_enter_critical (via BLX)
</UL>

<P><STRONG><a name="[d7]"></a>__ARM_common_enable_fiq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_exit_critical (via BLX)
</UL>

<P><STRONG><a name="[d8]"></a>__ARM_common_enable_irq</STRONG> (ARM, 0 bytes, Stack size 0 bytes, stack_rom_symbol.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset (via BLX)
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset (via BLX)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via BLX)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_exit_critical (via BLX)
</UL>

<P><STRONG><a name="[44]"></a>sys_Reset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, boot_handlers.o(SYS_BOOT))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = sys_Reset &rArr; rw_main &rArr; rwip_init &rArr; appm_init &rArr; app_tuya_init &rArr; tuya_ble_app_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main (via Veneer)
</UL>

<P><STRONG><a name="[45]"></a>SYSirq_FIQ_Handler</STRONG> (ARM, 16 bytes, Stack size 24 bytes, intc.o(sys_fiq_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SYSirq_FIQ_Handler &rArr; FIQ_Exception &rArr; pwm_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>

<P><STRONG><a name="[47]"></a>SYSirq_IRQ_Handler</STRONG> (ARM, 16 bytes, Stack size 24 bytes, intc.o(sys_irq_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SYSirq_IRQ_Handler &rArr; IRQ_Exception &rArr; uart2_isr &rArr; tuya_ble_common_uart_receive_data &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[111]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_gpio_test
</UL>

<P><STRONG><a name="[4c]"></a>atoll</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atoll &rArr; __strtoll &rArr; _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[183]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[184]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__strtoll</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, __strtoll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __strtoll &rArr; _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll
</UL>

<P><STRONG><a name="[185]"></a>__I$use$fp</STRONG> (ARM, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[79]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[186]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
</UL>

<P><STRONG><a name="[50]"></a>_strtoull</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, _strtoull.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
</UL>

<P><STRONG><a name="[54]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[53]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz (via BLX)
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_lmul</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
</UL>

<P><STRONG><a name="[187]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
</UL>

<P><STRONG><a name="[5d]"></a>AES128_CBC_decrypt_buffer</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, tuya_ble_aes.o(i.AES128_CBC_decrypt_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = AES128_CBC_decrypt_buffer &rArr; InvCipher &rArr; InvMixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XorWithIv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyExpansion
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvCipher
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_decryption (via BLX)
</UL>

<P><STRONG><a name="[63]"></a>AES128_CBC_encrypt_buffer</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, tuya_ble_aes.o(i.AES128_CBC_encrypt_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AES128_CBC_encrypt_buffer &rArr; Cipher &rArr; MixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XorWithIv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyExpansion
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cipher
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt (via BLX)
</UL>

<P><STRONG><a name="[65]"></a>AES128_ECB_encrypt</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tuya_ble_aes.o(i.AES128_ECB_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = AES128_ECB_encrypt &rArr; Cipher &rArr; MixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyExpansion
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cipher
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt (via BLX)
</UL>

<P><STRONG><a name="[b8]"></a>Delay_ms</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rf_xvr.o(i.Delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_delay_ms
</UL>

<P><STRONG><a name="[46]"></a>FIQ_Exception</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, intc.o(i.FIQ_Exception))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FIQ_Exception &rArr; pwm_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_isr
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[48]"></a>IRQ_Exception</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, intc.o(i.IRQ_Exception))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = IRQ_Exception &rArr; uart2_isr &rArr; tuya_ble_common_uart_receive_data &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_isr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_isr
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_isr
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler (via BLX)
</UL>

<P><STRONG><a name="[1b]"></a>Read_Uart_Buf</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(i.Read_Uart_Buf))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[75]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[188]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[117]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
</UL>

<P><STRONG><a name="[189]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[18a]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[77]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[18b]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[18c]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[18d]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[17d]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>

<P><STRONG><a name="[108]"></a>__ARM_common_switch8</STRONG> (ARM, 24 bytes, Stack size 0 bytes, app_tuya.o(i.__ARM_common_switch8))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_cb_handler (via BLX)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process (via BLX)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inter_event_response (via BLX)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process (via BLX)
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process (via BLX)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_data_unpack (via BLX)
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req (via BLX)
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoull
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtoll
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll
</UL>

<P><STRONG><a name="[18e]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[2d]"></a>app_tuya_add_service</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_tuya_service.o(i.app_tuya_add_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_tuya_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>app_tuya_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_tuya.o(i.app_tuya_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = app_tuya_init &rArr; tuya_ble_app_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_service_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
</UL>

<P><STRONG><a name="[85]"></a>app_tuya_send_data</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_tuya_service.o(i.app_tuya_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_tuya_send_data &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_char_notify_period_ntf_handler
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data
</UL>

<P><STRONG><a name="[82]"></a>app_tuya_service_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_tuya_service.o(i.app_tuya_service_init))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_init
</UL>

<P><STRONG><a name="[b1]"></a>appm_add_svc</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app.o(i.appm_add_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_add_svc
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[89]"></a>appm_disconnect</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app.o(i.appm_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
</UL>

<P><STRONG><a name="[8a]"></a>appm_get_dev_name</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app.o(i.appm_get_dev_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_get_dev_name
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[8b]"></a>appm_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, app.o(i.appm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = appm_init &rArr; app_tuya_init &rArr; tuya_ble_app_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[8f]"></a>appm_start_advertising</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, app.o(i.appm_start_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = appm_start_advertising &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[92]"></a>appm_update_adv_data</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, app.o(i.appm_update_adv_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = appm_update_adv_data
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_adv_data_update
</UL>

<P><STRONG><a name="[93]"></a>appm_update_param</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, app.o(i.appm_update_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = appm_update_param &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_req_ind_handler
</UL>

<P><STRONG><a name="[19]"></a>assert_err</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arch_main.o(i.assert_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = assert_err &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[1a]"></a>assert_param</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, arch_main.o(i.assert_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = assert_param &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[94]"></a>bdaddr_env_init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, arch_main.o(i.bdaddr_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bdaddr_env_init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[9e]"></a>data_2_klvlist</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, tuya_ble_mutli_tsf_protocol.o(i.data_2_klvlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = data_2_klvlist &rArr; free_klv_list &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_write_req
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_report
</UL>

<P><STRONG><a name="[cf]"></a>emi_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, emi.o(i.emi_init))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[a3]"></a>flash_erase_sector</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, flash.o(i.flash_erase_sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_erase_sector
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
</UL>

<P><STRONG><a name="[d5]"></a>flash_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash.o(i.flash_init))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[a9]"></a>flash_read</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, flash.o(i.flash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_read &rArr; flash_readword
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
</UL>

<P><STRONG><a name="[aa]"></a>flash_readword</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, flash.o(i.flash_readword))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_readword
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>

<P><STRONG><a name="[ab]"></a>flash_write</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, flash.o(i.flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
</UL>

<P><STRONG><a name="[ac]"></a>flash_writeword</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, flash.o(i.flash_writeword))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeKey
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_status
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_start
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_clearKey
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>

<P><STRONG><a name="[9f]"></a>free_klv_list</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tuya_ble_mutli_tsf_protocol.o(i.free_klv_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = free_klv_list &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_write_req
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_report
</UL>

<P><STRONG><a name="[99]"></a>get_trsmitr_frame_total_len</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_mutli_tsf_protocol.o(i.get_trsmitr_frame_total_len))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
</UL>

<P><STRONG><a name="[9c]"></a>get_trsmitr_subpkg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_mutli_tsf_protocol.o(i.get_trsmitr_subpkg))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[9b]"></a>get_trsmitr_subpkg_len</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_mutli_tsf_protocol.o(i.get_trsmitr_subpkg_len))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[6e]"></a>gpio_isr</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gpio.o(i.gpio_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gpio_isr &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[cc]"></a>icu_init</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, icu.o(i.icu_init))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[b6]"></a>initial_xver_BK3432_openLoop</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, rf_xvr.o(i.initial_xver_BK3432_openLoop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = initial_xver_BK3432_openLoop &rArr; kmod_calibration &rArr; Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmod_calibration
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
</UL>

<P><STRONG><a name="[d2]"></a>intc_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, intc.o(i.intc_init))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[b7]"></a>kmod_calibration</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, rf_xvr.o(i.kmod_calibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmod_calibration &rArr; Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3432_openLoop
</UL>

<P><STRONG><a name="[bb]"></a>mbedtls_internal_md5_process</STRONG> (Thumb, 2040 bytes, Stack size 116 bytes, tuya_ble_md5.o(i.mbedtls_internal_md5_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = mbedtls_internal_md5_process
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update_ret
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish_ret
</UL>

<P><STRONG><a name="[b9]"></a>mbedtls_md5_finish</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tuya_ble_md5.o(i.mbedtls_md5_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = mbedtls_md5_finish &rArr; mbedtls_md5_finish_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt (via BLX)
</UL>

<P><STRONG><a name="[ba]"></a>mbedtls_md5_finish_ret</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, tuya_ble_md5.o(i.mbedtls_md5_finish_ret))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = mbedtls_md5_finish_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_md5_process
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish
</UL>

<P><STRONG><a name="[bd]"></a>mbedtls_md5_free</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tuya_ble_md5.o(i.mbedtls_md5_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbedtls_md5_free
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt (via BLX)
</UL>

<P><STRONG><a name="[be]"></a>mbedtls_md5_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_md5.o(i.mbedtls_md5_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mbedtls_md5_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt (via BLX)
</UL>

<P><STRONG><a name="[bf]"></a>mbedtls_md5_starts</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, tuya_ble_md5.o(i.mbedtls_md5_starts))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = mbedtls_md5_starts
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_starts_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt (via BLX)
</UL>

<P><STRONG><a name="[c0]"></a>mbedtls_md5_starts_ret</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tuya_ble_md5.o(i.mbedtls_md5_starts_ret))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_starts
</UL>

<P><STRONG><a name="[c1]"></a>mbedtls_md5_update</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tuya_ble_md5.o(i.mbedtls_md5_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update_ret
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt (via BLX)
</UL>

<P><STRONG><a name="[c2]"></a>mbedtls_md5_update_ret</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, tuya_ble_md5.o(i.mbedtls_md5_update_ret))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_internal_md5_process
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update
</UL>

<P><STRONG><a name="[18]"></a>platform_reset</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, arch_main.o(i.platform_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = platform_reset &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_enable
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_finish_transfers
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[15]"></a>prf_add_profile</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, prf.o(i.prf_add_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prf_add_profile &rArr; prf_itf_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[14]"></a>prf_cleanup</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, prf.o(i.prf_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prf_cleanup &rArr; prf_itf_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[13]"></a>prf_create</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, prf.o(i.prf_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prf_create &rArr; prf_itf_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[b4]"></a>prf_dst_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(i.prf_dst_task_get))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
</UL>

<P><STRONG><a name="[b3]"></a>prf_env_get</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, prf.o(i.prf_env_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_char_notify_level_upd_req_handler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_get_att_idx
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_get_att_handle
</UL>

<P><STRONG><a name="[10]"></a>prf_get_id_from_task</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, prf.o(i.prf_get_id_from_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prf_get_id_from_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[11]"></a>prf_get_task_from_id</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, prf.o(i.prf_get_task_from_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prf_get_task_from_id
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_send_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[12]"></a>prf_init</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, prf.o(i.prf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prf_init &rArr; prf_itf_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[17b]"></a>prf_src_task_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, prf.o(i.prf_src_task_get))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_notify_value_lvl
</UL>

<P><STRONG><a name="[6b]"></a>pwm_isr</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, pwm.o(i.pwm_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pwm_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[c9]"></a>rf_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rf_xvr.o(i.rf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rf_init &rArr; initial_xver_BK3432_openLoop &rArr; kmod_calibration &rArr; Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initial_xver_BK3432_openLoop
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[ca]"></a>rom_env_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, arch_main.o(i.rom_env_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rom_env_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[cb]"></a>rw_main</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, arch_main.o(i.rw_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = rw_main &rArr; rwip_init &rArr; appm_init &rArr; app_tuya_init &rArr; tuya_ble_app_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_disable
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icu_init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emi_init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_eif_api_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rom_env_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bdaddr_env_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stack_Integrity_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_Reset (via Veneer)
</UL>

<P><STRONG><a name="[db]"></a>rwble_hl_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rwble_hl.o(i.rwble_hl_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rwble_hl_init
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[16]"></a>rwble_hl_reset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rwble_hl.o(i.rwble_hl_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rwble_hl_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[e0]"></a>rwble_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rwble.o(i.rwble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rwble_init
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_ble_ready
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_buf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init
</UL>

<P><STRONG><a name="[6a]"></a>rwble_isr</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, rwble.o(i.rwble_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwble_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_feed
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_sw_isr
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_finetimer_isr
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_rx_isr
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_end_isr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_evt_timer_isr
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_crypt_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Exception
</UL>

<P><STRONG><a name="[ed]"></a>rwble_reset</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, rwble.o(i.rwble_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rwble_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_core_reset
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llc_reset
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_buf_init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_reset
</UL>

<P><STRONG><a name="[d1]"></a>rwip_eif_api_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arch_main.o(i.rwip_eif_api_init))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[d6]"></a>rwip_init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, rwip.o(i.rwip_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = rwip_init &rArr; appm_init &rArr; app_tuya_init &rArr; tuya_ble_app_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_init
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[17]"></a>rwip_reset</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rwip.o(i.rwip_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rwip_reset &rArr; rwble_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_reset
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_reset
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ea_init
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[d9]"></a>rwip_schedule</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwip.o(i.rwip_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rwip_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_schedule
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[ce]"></a>system_sleep_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, icu.o(i.system_sleep_init))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[d0]"></a>timer_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timer.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[f8]"></a>trsmitr_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_mutli_tsf_protocol.o(i.trsmitr_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = trsmitr_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[97]"></a>trsmitr_recv_pkg_decode</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, tuya_ble_mutli_tsf_protocol.o(i.trsmitr_recv_pkg_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = trsmitr_recv_pkg_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
</UL>

<P><STRONG><a name="[f9]"></a>trsmitr_send_pkg_encode</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, tuya_ble_mutli_tsf_protocol.o(i.trsmitr_send_pkg_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = trsmitr_send_pkg_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[fb]"></a>tuya_ble_adv_change</STRONG> (Thumb, 262 bytes, Stack size 64 bytes, tuya_ble_main.o(i.tuya_ble_adv_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_advertising_adv_data_update
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encrypt_old_with_key (via BLX)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt (via BLX)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_info_update_evt
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[9d]"></a>tuya_ble_air_recv_packet_free</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tuya_ble_data_handler.o(i.tuya_ble_air_recv_packet_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_air_recv_packet_free &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
</UL>

<P><STRONG><a name="[105]"></a>tuya_ble_app_production_test_process</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, tuya_ble_app_production_test.o(i.tuya_ble_app_production_test_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = tuya_ble_app_production_test_process &rArr; tuya_ble_auc_write_auth_info &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_stop
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_beacon_scan_start
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_custom_app_production_test_process
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_gpio_test
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[118]"></a>tuya_ble_buffer_value_is_all_x</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, tuya_ble_utils.o(i.tuya_ble_buffer_value_is_all_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tuya_ble_buffer_value_is_all_x
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
</UL>

<P><STRONG><a name="[103]"></a>tuya_ble_callback_queue_register</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tuya_ble_api.o(i.tuya_ble_callback_queue_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_callback_queue_register &rArr; tuya_ble_device_exit_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_exit_critical
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_enter_critical
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_init
</UL>

<P><STRONG><a name="[121]"></a>tuya_ble_cb_event_send</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_cb_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_cb_event_send &rArr; tuya_ble_inter_event_response &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inter_event_response
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_write_req
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
</UL>

<P><STRONG><a name="[152]"></a>tuya_ble_check_sum</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tuya_ble_utils.o(i.tuya_ble_check_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_check_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>

<P><STRONG><a name="[123]"></a>tuya_ble_commData_send</STRONG> (Thumb, 454 bytes, Stack size 112 bytes, tuya_ble_data_handler.o(i.tuya_ble_commData_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption (via BLX)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc16_compute
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_send_pkg_encode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_subpkg_len
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_subpkg
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_exit_critical
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_enter_critical
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_time_request_evt
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_reported_evt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_reported_evt
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_write_req
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_start_req
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_offset_req
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_file_info_req
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_end_req
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_data_req
</UL>

<P><STRONG><a name="[127]"></a>tuya_ble_commonData_rx_proc</STRONG> (Thumb, 356 bytes, Stack size 72 bytes, tuya_ble_data_handler.o(i.tuya_ble_commonData_rx_proc))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = tuya_ble_commonData_rx_proc &rArr; tuya_ble_decryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_decryption (via BLX)
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc16_compute
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_air_recv_packet_free
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_exit_critical
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_enter_critical
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_data_evt
</UL>

<P><STRONG><a name="[171]"></a>tuya_ble_common_uart_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_port.o(i.tuya_ble_common_uart_init))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[12c]"></a>tuya_ble_common_uart_receive_data</STRONG> (Thumb, 130 bytes, Stack size 72 bytes, tuya_ble_api.o(i.tuya_ble_common_uart_receive_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_common_uart_receive_data &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_data_unpack
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_isr
</UL>

<P><STRONG><a name="[12d]"></a>tuya_ble_common_uart_send_data</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_common_uart_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_common_uart_send_data &rArr; uart2_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>

<P><STRONG><a name="[172]"></a>tuya_ble_connect_monitor_timer_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tuya_ble_port.o(i.tuya_ble_connect_monitor_timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[12f]"></a>tuya_ble_connect_monitor_timer_start</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_connect_monitor_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_connect_monitor_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[107]"></a>tuya_ble_connect_monitor_timer_stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_connect_monitor_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_connect_monitor_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
</UL>

<P><STRONG><a name="[106]"></a>tuya_ble_connect_status_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tuya_ble_main.o(i.tuya_ble_connect_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_connect_monitor_callback
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_report
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[131]"></a>tuya_ble_connect_status_set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_connect_status_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_connect_status_set &rArr; tuya_ble_device_exit_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_exit_critical
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_enter_critical
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[ad]"></a>tuya_ble_connected_handler</STRONG> (Thumb, 22 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_connected_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_connected_handler &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[124]"></a>tuya_ble_crc16_compute</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, tuya_ble_utils.o(i.tuya_ble_crc16_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tuya_ble_crc16_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[a2]"></a>tuya_ble_crc32_compute</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, tuya_ble_utils.o(i.tuya_ble_crc32_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_data_req
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_settings_crc_ok
</UL>

<P><STRONG><a name="[10a]"></a>tuya_ble_custom_app_production_test_process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, custom_app_product_test.o(i.tuya_ble_custom_app_production_test_process))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[176]"></a>tuya_ble_custom_app_uart_common_process</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, custom_app_uart_common_handler.o(i.tuya_ble_custom_app_uart_common_process))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_process
</UL>

<P><STRONG><a name="[128]"></a>tuya_ble_decryption</STRONG> (ARM, 300 bytes, Stack size 72 bytes, tuya_ble_secure.o(i.tuya_ble_decryption))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = tuya_ble_decryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_decrypt_buffer (via BLX)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc (via BLX)
</UL>

<P><STRONG><a name="[133]"></a>tuya_ble_dequeue</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tuya_ble_queue.o(i.tuya_ble_dequeue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_dequeue
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_free
</UL>

<P><STRONG><a name="[112]"></a>tuya_ble_device_delay_ms</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_device_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_device_delay_ms &rArr; Delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_prod_monitor_callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[11f]"></a>tuya_ble_device_enter_critical</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_device_enter_critical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_device_enter_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_irq (via BLX)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_disable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_callback_queue_register
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_reset_ble_sn
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[120]"></a>tuya_ble_device_exit_critical</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_device_exit_critical))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_device_exit_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_irq (via BLX)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_enable_fiq (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_callback_queue_register
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_reset_ble_sn
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_clear
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[16e]"></a>tuya_ble_device_id_16_to_20</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, tuya_ble_utils.o(i.tuya_ble_device_id_16_to_20))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_device_id_16_to_20
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[16d]"></a>tuya_ble_device_id_20_to_16</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, tuya_ble_utils.o(i.tuya_ble_device_id_20_to_16))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_device_id_20_to_16
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[fe]"></a>tuya_ble_device_id_encrypt</STRONG> (ARM, 152 bytes, Stack size 128 bytes, tuya_ble_secure.o(i.tuya_ble_device_id_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change (via BLX)
</UL>

<P><STRONG><a name="[113]"></a>tuya_ble_device_reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_device_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tuya_ble_device_reset &rArr; platform_reset &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_prod_monitor_callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[135]"></a>tuya_ble_device_reset_time_delay_ms</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_device_reset_time_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_device_reset_time_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_end_req
</UL>

<P><STRONG><a name="[136]"></a>tuya_ble_device_unbond</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, tuya_ble_data_handler.o(i.tuya_ble_device_unbond))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = tuya_ble_device_unbond &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
</UL>

<P><STRONG><a name="[af]"></a>tuya_ble_disconnected_handler</STRONG> (Thumb, 22 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_disconnected_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_disconnected_handler &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
</UL>

<P><STRONG><a name="[138]"></a>tuya_ble_dp_data_report</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, tuya_ble_api.o(i.tuya_ble_dp_data_report))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = tuya_ble_dp_data_report &rArr; data_2_klvlist &rArr; free_klv_list &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_cb_handler
</UL>

<P><STRONG><a name="[fc]"></a>tuya_ble_encrypt_old_with_key</STRONG> (ARM, 192 bytes, Stack size 24 bytes, tuya_ble_secure.o(i.tuya_ble_encrypt_old_with_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = tuya_ble_encrypt_old_with_key &rArr; tuya_ble_aes128_ecb_encrypt &rArr; AES128_ECB_encrypt &rArr; Cipher &rArr; MixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_Add_Pkcs
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change (via BLX)
</UL>

<P><STRONG><a name="[125]"></a>tuya_ble_encryption</STRONG> (ARM, 204 bytes, Stack size 56 bytes, tuya_ble_secure.o(i.tuya_ble_encryption))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_Add_Pkcs
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send (via BLX)
</UL>

<P><STRONG><a name="[139]"></a>tuya_ble_enqueue</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, tuya_ble_queue.o(i.tuya_ble_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_enqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
</UL>

<P><STRONG><a name="[170]"></a>tuya_ble_event_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tuya_ble_main.o(i.tuya_ble_event_init))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[80]"></a>tuya_ble_event_process</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_event_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 852<LI>Call Chain = tuya_ble_event_process &rArr; tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_handle_dev_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_time_request_evt
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_factory_reset_evt
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_reported_evt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_reported_evt
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_info_update_evt
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_data_evt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_cmd_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_event_handler
</UL>

<P><STRONG><a name="[12a]"></a>tuya_ble_event_send</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_event_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_message_send
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnected_handler
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connected_handler
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_report
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[149]"></a>tuya_ble_evt_process</STRONG> (Thumb, 446 bytes, Stack size 64 bytes, tuya_ble_data_handler.o(i.tuya_ble_evt_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = tuya_ble_evt_process &rArr; tuya_ble_handle_dev_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_write_req
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_device_reset_req
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_cmd_evt
</UL>

<P><STRONG><a name="[98]"></a>tuya_ble_free</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_inter_event_response
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_reported_evt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_reported_evt
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_data_prod_test_response_evt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ble_cmd_evt
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_air_recv_packet_free
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_write_req
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_report
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_free
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[ff]"></a>tuya_ble_gap_advertising_adv_data_update</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_gap_advertising_adv_data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tuya_ble_gap_advertising_adv_data_update &rArr; appm_update_adv_data
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_adv_data
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
</UL>

<P><STRONG><a name="[129]"></a>tuya_ble_gap_disconnect</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_gap_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_gap_disconnect &rArr; appm_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_connect_monitor_callback
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
</UL>

<P><STRONG><a name="[b5]"></a>tuya_ble_gatt_receive_data</STRONG> (Thumb, 46 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_gatt_receive_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_gatt_receive_data &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[154]"></a>tuya_ble_gatt_send_data</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_gatt_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tuya_ble_gatt_send_data &rArr; app_tuya_send_data &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[126]"></a>tuya_ble_gatt_send_data_enqueue</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = tuya_ble_gatt_send_data_enqueue &rArr; tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; app_tuya_send_data &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_enqueue
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>

<P><STRONG><a name="[22]"></a>tuya_ble_gatt_send_data_handle</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = tuya_ble_gatt_send_data_handle &rArr; tuya_ble_gatt_send_data &rArr; app_tuya_send_data &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_free
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_get
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_flush
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_decrease
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_get_queue_used
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_data_handle)
</UL>
<P><STRONG><a name="[15a]"></a>tuya_ble_gatt_send_queue_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_gatt_send_queue_init
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[158]"></a>tuya_ble_get_queue_used</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_queue.o(i.tuya_ble_get_queue_used))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[145]"></a>tuya_ble_handle_ble_cmd_evt</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_ble_cmd_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_handle_dev_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[13f]"></a>tuya_ble_handle_ble_data_evt</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_ble_data_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = tuya_ble_handle_ble_data_evt &rArr; tuya_ble_commonData_rx_proc &rArr; tuya_ble_decryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[146]"></a>tuya_ble_handle_connect_change_evt</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_connect_change_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_handle_connect_change_evt &rArr; tuya_ble_cb_event_send &rArr; tuya_ble_inter_event_response &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_start
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_reset_ble_sn
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_clear
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[13e]"></a>tuya_ble_handle_data_prod_test_response_evt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_data_prod_test_response_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = tuya_ble_handle_data_prod_test_response_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_send_data
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[13a]"></a>tuya_ble_handle_device_info_update_evt</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_device_info_update_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = tuya_ble_handle_device_info_update_evt &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[13b]"></a>tuya_ble_handle_dp_data_reported_evt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = tuya_ble_handle_dp_data_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[141]"></a>tuya_ble_handle_dp_data_with_flag_and_time_reported_evt</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_flag_and_time_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = tuya_ble_handle_dp_data_with_flag_and_time_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[143]"></a>tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[13c]"></a>tuya_ble_handle_dp_data_with_flag_reported_evt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_flag_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = tuya_ble_handle_dp_data_with_flag_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[140]"></a>tuya_ble_handle_dp_data_with_time_reported_evt</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_time_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = tuya_ble_handle_dp_data_with_time_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[142]"></a>tuya_ble_handle_dp_data_with_time_string_reported_evt</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_dp_data_with_time_string_reported_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = tuya_ble_handle_dp_data_with_time_string_reported_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[13d]"></a>tuya_ble_handle_factory_reset_evt</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_factory_reset_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = tuya_ble_handle_factory_reset_evt &rArr; tuya_ble_device_unbond &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[14f]"></a>tuya_ble_handle_ota_req</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app_tuya_ota.o(i.tuya_ble_handle_ota_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = tuya_ble_handle_ota_req &rArr; tuya_ota_start_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_start_req
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_offset_req
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_file_info_req
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_end_req
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_data_req
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[147]"></a>tuya_ble_handle_time_request_evt</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_time_request_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = tuya_ble_handle_time_request_evt &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_valid_get
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[144]"></a>tuya_ble_handle_uart_cmd_evt</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, tuya_ble_event_handler.o(i.tuya_ble_handle_uart_cmd_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = tuya_ble_handle_uart_cmd_evt &rArr; tuya_ble_app_production_test_process &rArr; tuya_ble_auc_write_auth_info &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_common_process
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>

<P><STRONG><a name="[122]"></a>tuya_ble_inter_event_response</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tuya_ble_main.o(i.tuya_ble_inter_event_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_inter_event_response &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
</UL>

<P><STRONG><a name="[9a]"></a>tuya_ble_malloc</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, tuya_ble_port.o(i.tuya_ble_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_enqueue
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_write_req
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_query_req
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_data_unpack
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_report
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[148]"></a>tuya_ble_message_send</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, tuya_ble_port.o(i.tuya_ble_message_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_send
</UL>

<P><STRONG><a name="[168]"></a>tuya_ble_mytime_2_utc_sec</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tuya_ble_unix_time.o(i.tuya_ble_mytime_2_utc_sec))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tuya_ble_mytime_2_utc_sec &rArr; applib_dt_last_day_of_mon &rArr; applib_dt_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_last_day_of_mon
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
</UL>

<P><STRONG><a name="[16a]"></a>tuya_ble_nv_erase</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, tuya_ble_port.o(i.tuya_ble_nv_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tuya_ble_nv_erase &rArr; flash_erase_sector
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_data_req
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
</UL>

<P><STRONG><a name="[173]"></a>tuya_ble_nv_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_port.o(i.tuya_ble_nv_init))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_init
</UL>

<P><STRONG><a name="[a1]"></a>tuya_ble_nv_read</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_nv_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tuya_ble_nv_read &rArr; flash_read &rArr; flash_readword
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[16b]"></a>tuya_ble_nv_write</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_port.o(i.tuya_ble_nv_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_data_req
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
</UL>

<P><STRONG><a name="[15d]"></a>tuya_ble_pair_rand_clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, tuya_ble_data_handler.o(i.tuya_ble_pair_rand_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_pair_rand_clear &rArr; tuya_ble_device_exit_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_exit_critical
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_enter_critical
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
</UL>

<P><STRONG><a name="[160]"></a>tuya_ble_pair_rand_valid_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tuya_ble_data_handler.o(i.tuya_ble_pair_rand_valid_get))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_time_request_evt
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_string_reported_evt
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_time_reported_evt
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_reported_evt
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_string_reported_evt
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_with_flag_and_time_reported_evt
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dp_data_reported_evt
</UL>

<P><STRONG><a name="[11a]"></a>tuya_ble_prod_beacon_get_rssi_avg</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, custom_app_product_test.o(i.tuya_ble_prod_beacon_get_rssi_avg))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
</UL>

<P><STRONG><a name="[10b]"></a>tuya_ble_prod_beacon_scan_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, custom_app_product_test.o(i.tuya_ble_prod_beacon_scan_start))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[119]"></a>tuya_ble_prod_beacon_scan_stop</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, custom_app_product_test.o(i.tuya_ble_prod_beacon_scan_stop))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
</UL>

<P><STRONG><a name="[116]"></a>tuya_ble_prod_gpio_test</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, custom_app_product_test.o(i.tuya_ble_prod_gpio_test))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_gpio_test
</UL>

<P><STRONG><a name="[156]"></a>tuya_ble_queue_decrease</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tuya_ble_queue.o(i.tuya_ble_queue_decrease))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_queue_decrease
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[159]"></a>tuya_ble_queue_flush</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tuya_ble_queue.o(i.tuya_ble_queue_flush))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[157]"></a>tuya_ble_queue_get</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tuya_ble_queue.o(i.tuya_ble_queue_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_queue_get
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[15b]"></a>tuya_ble_queue_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tuya_ble_queue.o(i.tuya_ble_queue_init))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_init
</UL>

<P><STRONG><a name="[15e]"></a>tuya_ble_rand_generator</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, tuya_ble_port.o(i.tuya_ble_rand_generator))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_rand_generator
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req
</UL>

<P><STRONG><a name="[15f]"></a>tuya_ble_register_key_generate</STRONG> (ARM, 40 bytes, Stack size 8 bytes, tuya_ble_secure.o(i.tuya_ble_register_key_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = tuya_ble_register_key_generate &rArr; tuya_ble_aes128_ecb_encrypt &rArr; AES128_ECB_encrypt &rArr; Cipher &rArr; MixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_ecb_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_dev_info_req (via BLX)
</UL>

<P><STRONG><a name="[15c]"></a>tuya_ble_reset_ble_sn</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tuya_ble_data_handler.o(i.tuya_ble_reset_ble_sn))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_reset_ble_sn &rArr; tuya_ble_device_exit_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_exit_critical
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_enter_critical
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_connect_change_evt
</UL>

<P><STRONG><a name="[167]"></a>tuya_ble_rtc_set_timestamp</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_ble_port.o(i.tuya_ble_rtc_set_timestamp))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_date_resp
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_unix_time_char_ms_resp
</UL>

<P><STRONG><a name="[102]"></a>tuya_ble_sdk_init</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, tuya_ble_api.o(i.tuya_ble_sdk_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_set_device_version
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_queue_init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_20_to_16
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_16_to_20
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_init
</UL>

<P><STRONG><a name="[16f]"></a>tuya_ble_set_device_version</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tuya_ble_data_handler.o(i.tuya_ble_set_device_version))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[16c]"></a>tuya_ble_storage_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_storage.o(i.tuya_ble_storage_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = tuya_ble_storage_init &rArr; tuya_ble_storage_load_settings &rArr; tuya_ble_nv_read &rArr; flash_read &rArr; flash_readword
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>

<P><STRONG><a name="[174]"></a>tuya_ble_storage_load_settings</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, tuya_ble_storage.o(i.tuya_ble_storage_load_settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_storage_load_settings &rArr; tuya_ble_nv_read &rArr; flash_read &rArr; flash_readword
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_settings_crc_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_init
</UL>

<P><STRONG><a name="[175]"></a>tuya_ble_storage_save_auth_settings</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, tuya_ble_storage.o(i.tuya_ble_storage_save_auth_settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_hid
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
</UL>

<P><STRONG><a name="[137]"></a>tuya_ble_storage_save_sys_settings</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, tuya_ble_storage.o(i.tuya_ble_storage_save_sys_settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_storage_save_sys_settings &rArr; tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_pair_req
</UL>

<P><STRONG><a name="[11d]"></a>tuya_ble_storage_write_auth_key_device_id_mac</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, tuya_ble_storage.o(i.tuya_ble_storage_write_auth_key_device_id_mac))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
</UL>

<P><STRONG><a name="[11e]"></a>tuya_ble_storage_write_hid</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tuya_ble_storage.o(i.tuya_ble_storage_write_hid))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = tuya_ble_storage_write_hid &rArr; tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_auth_settings
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
</UL>

<P><STRONG><a name="[166]"></a>tuya_ble_uart_common_process</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_app_uart_common_handler.o(i.tuya_ble_uart_common_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tuya_ble_uart_common_process
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_custom_app_uart_common_process
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_uart_cmd_evt
</UL>

<P><STRONG><a name="[7f]"></a>tuya_ble_vtimer_connect_monitor_callback</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, tuya_ble_api.o(i.tuya_ble_vtimer_connect_monitor_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_vtimer_connect_monitor_callback &rArr; tuya_ble_gap_disconnect &rArr; appm_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_connect_monitor_timer_handler
</UL>

<P><STRONG><a name="[84]"></a>tuya_ble_vtimer_prod_monitor_callback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tuya_ble_app_production_test.o(i.tuya_ble_vtimer_prod_monitor_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tuya_ble_vtimer_prod_monitor_callback &rArr; tuya_ble_device_reset &rArr; platform_reset &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_prod_monitor_timer_handler
</UL>

<P><STRONG><a name="[104]"></a>tuya_ota_init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, app_tuya_ota.o(i.tuya_ota_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ota_init
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_init
</UL>

<P><STRONG><a name="[b0]"></a>tuya_ota_init_disconnect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_tuya_ota.o(i.tuya_ota_init_disconnect))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_end_req
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_data_req
</UL>

<P><STRONG><a name="[178]"></a>tuyas_get_att_handle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, tuya_service.o(i.tuyas_get_att_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuyas_get_att_handle &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_notify_value_lvl
</UL>

<P><STRONG><a name="[b2]"></a>tuyas_get_att_idx</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tuya_service.o(i.tuyas_get_att_idx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuyas_get_att_idx &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[177]"></a>tuyas_notify_value_lvl</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tuya_service.o(i.tuyas_notify_value_lvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuyas_notify_value_lvl &rArr; tuyas_get_att_handle &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_src_task_get
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_get_att_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_char_notify_level_upd_req_handler
</UL>

<P><STRONG><a name="[c8]"></a>tuyas_prf_itf_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tuya_service.o(i.tuyas_prf_itf_get))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get
</UL>

<P><STRONG><a name="[d4]"></a>uart2_init</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, uart2.o(i.uart2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart2_init
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[6d]"></a>uart2_isr</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, uart2.o(i.uart2_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uart2_isr &rArr; tuya_ble_common_uart_receive_data &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[12e]"></a>uart2_send</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart2.o(i.uart2_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart2_send
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_send_data
</UL>

<P><STRONG><a name="[1c]"></a>uart_clear_rxfifo</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(i.uart_clear_rxfifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_clear_rxfifo
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rom_env_init)
</UL>
<P><STRONG><a name="[c5]"></a>uart_finish_transfers</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart.o(i.uart_finish_transfers))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
</UL>

<P><STRONG><a name="[20]"></a>uart_flow_off</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(i.uart_flow_off))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rwip_eif_api_init)
</UL>
<P><STRONG><a name="[1f]"></a>uart_flow_on</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(i.uart_flow_on))
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rwip_eif_api_init)
</UL>
<P><STRONG><a name="[d3]"></a>uart_init</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, uart.o(i.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_stack_register
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[6c]"></a>uart_isr</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, uart.o(i.uart_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Exception
</UL>

<P><STRONG><a name="[23]"></a>uart_printf</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, uart.o(i.uart_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_isr
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_param
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_char_write_writer_req_handler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_char_notify_level_ntf_cfg_ind_handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_msg_dflt_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_mtu_changed_ind_handler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_req_ind_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_updated_ind_handler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_le_pkt_size_ind_handler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(i.uart_init)
</UL>
<P><STRONG><a name="[74]"></a>uart_putchar</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, uart.o(i.uart_putchar))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stack_Integrity_Check
</UL>

<P><STRONG><a name="[1d]"></a>uart_read</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, uart.o(i.uart_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uart_read &rArr; assert_err &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rwip_eif_api_init)
</UL>
<P><STRONG><a name="[1e]"></a>uart_write</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, uart.o(i.uart_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = uart_write &rArr; assert_err &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_err
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arch_main.o(i.rwip_eif_api_init)
</UL>
<P><STRONG><a name="[da]"></a>wdt_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wdt.o(i.wdt_disable))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[91]"></a>wdt_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wdt.o(i.wdt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>

<P><STRONG><a name="[e8]"></a>wdt_feed</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wdt.o(i.wdt_feed))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[73]"></a>Stack_Integrity_Check</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, arch_main.o(i.Stack_Integrity_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Stack_Integrity_Check &rArr; uart_putchar
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rw_main
</UL>

<P><STRONG><a name="[1]"></a>Undefined</STRONG> (ARM, 0 bytes, Stack size unknown bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undefined_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[2]"></a>SoftwareInterrupt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftwareInterrupt_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[3]"></a>PrefetchAbort</STRONG> (ARM, 0 bytes, Stack size unknown bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrefetchAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[4]"></a>DataAbort</STRONG> (ARM, 0 bytes, Stack size unknown bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAbort_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[6]"></a>IRQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = IRQ_Handler &rArr; SYSirq_IRQ_Handler &rArr; IRQ_Exception &rArr; uart2_isr &rArr; tuya_ble_common_uart_receive_data &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[5]"></a>sys_reserved</STRONG> (ARM, 0 bytes, Stack size unknown bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_Exception (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[7]"></a>FIQ_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, boot_vectors.o(SYS_BOOT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = FIQ_Handler &rArr; SYSirq_FIQ_Handler &rArr; FIQ_Exception &rArr; pwm_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSirq_FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(SYS_BOOT)
</UL>
<P><STRONG><a name="[a8]"></a>flash_clearKey</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash.o(i.flash_clearKey))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[a6]"></a>flash_start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(i.flash_start))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[a7]"></a>flash_status</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, flash.o(i.flash_status))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[a5]"></a>flash_unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(i.flash_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[a4]"></a>flash_writeKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, flash.o(i.flash_writeKey))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_writeword
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_readword
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_sector
</UL>

<P><STRONG><a name="[e]"></a>rf_force_agc_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_force_agc_enable))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[d]"></a>rf_reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_reset))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[9]"></a>rf_rpl_reg_rd</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_rpl_reg_rd))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[a]"></a>rf_rpl_reg_wr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_rpl_reg_wr))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[f]"></a>rf_rssi_convert</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_rssi_convert))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[c]"></a>rf_sleep</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_sleep))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[b]"></a>rf_txpwr_dbm_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rf_xvr.o(i.rf_txpwr_dbm_get))
<BR>[Address Reference Count : 1]<UL><LI> rf_xvr.o(i.rf_init)
</UL>
<P><STRONG><a name="[27]"></a>tuyas_cleanup</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tuya_service.o(i.tuyas_cleanup))
<BR>[Address Reference Count : 1]<UL><LI> tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>tuyas_create</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tuya_service.o(i.tuyas_create))
<BR>[Address Reference Count : 1]<UL><LI> tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>tuyas_destroy</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tuya_service.o(i.tuyas_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuyas_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[24]"></a>tuyas_init</STRONG> (Thumb, 196 bytes, Stack size 64 bytes, tuya_service.o(i.tuyas_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tuyas_init
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_permission
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[29]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, tuya_service_task.o(i.gattc_att_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattc_att_info_req_ind_handler &rArr; tuyas_get_att_idx &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[2c]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, tuya_service_task.o(i.gattc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_cmp_evt_handler &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[2b]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, tuya_service_task.o(i.gattc_read_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gattc_read_req_ind_handler &rArr; tuyas_get_att_idx &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, tuya_service_task.o(i.gattc_write_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gattc_write_req_ind_handler &rArr; tuya_ble_gatt_receive_data &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_receive_data
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_dst_task_get
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_get_att_idx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[28]"></a>tuyas_char_notify_level_upd_req_handler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, tuya_service_task.o(i.tuyas_char_notify_level_upd_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tuyas_char_notify_level_upd_req_handler &rArr; tuyas_notify_value_lvl &rArr; tuyas_get_att_handle &rArr; prf_env_get
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_env_get
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_notify_value_lvl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tuya_service_task.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>prf_itf_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, prf.o(i.prf_itf_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prf_itf_get
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuyas_prf_itf_get
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_cleanup
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
</UL>

<P><STRONG><a name="[3c]"></a>app_tuya_connect_monitor_timer_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_task.o(i.app_tuya_connect_monitor_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_tuya_connect_monitor_timer_handler &rArr; tuya_ble_vtimer_connect_monitor_callback &rArr; tuya_ble_gap_disconnect &rArr; appm_disconnect
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_connect_monitor_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>app_tuya_event_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_task.o(i.app_tuya_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 860<LI>Call Chain = app_tuya_event_handler &rArr; tuya_ble_event_process &rArr; tuya_ble_handle_ble_cmd_evt &rArr; tuya_ble_evt_process &rArr; tuya_ble_handle_dev_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_event_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>app_tuya_prod_monitor_timer_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_task.o(i.app_tuya_prod_monitor_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_tuya_prod_monitor_timer_handler &rArr; tuya_ble_vtimer_prod_monitor_callback &rArr; tuya_ble_device_reset &rArr; platform_reset &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_vtimer_prod_monitor_callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>appm_msg_handler</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, app_task.o(i.appm_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = appm_msg_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, app_task.o(i.gapc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapc_cmp_evt_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, app_task.o(i.gapc_connection_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapc_connection_req_ind_handler &rArr; tuya_ble_connected_handler &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connected_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_task.o(i.gapc_disconnect_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapc_disconnect_ind_handler &rArr; tuya_ble_disconnected_handler &rArr; tuya_ble_event_send &rArr; tuya_ble_message_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_init_disconnect
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_disconnected_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, app_task.o(i.gapc_get_dev_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapc_get_dev_info_req_ind_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_get_dev_name
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>gapc_le_pkt_size_ind_handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_task.o(i.gapc_le_pkt_size_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapc_le_pkt_size_ind_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_task.o(i.gapc_param_update_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapc_param_update_req_ind_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>gapc_param_updated_ind_handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_task.o(i.gapc_param_updated_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapc_param_updated_ind_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_task.o(i.gapc_set_dev_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapc_set_dev_info_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>gapc_update_conn_param_req_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_task.o(i.gapc_update_conn_param_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapc_update_conn_param_req_ind_handler &rArr; appm_update_param &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_update_param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, app_task.o(i.gapm_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_cmp_evt_handler &rArr; appm_start_advertising &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_add_svc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>gapm_device_ready_ind_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_task.o(i.gapm_device_ready_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_device_ready_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_task.o(i.gapm_profile_added_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_profile_added_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>gattc_mtu_changed_ind_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_task.o(i.gattc_mtu_changed_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gattc_mtu_changed_ind_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>app_tuya_msg_dflt_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_tuya_service.o(i.app_tuya_msg_dflt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_tuya_msg_dflt_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>tuyas_char_notify_level_ntf_cfg_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_tuya_service.o(i.tuyas_char_notify_level_ntf_cfg_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tuyas_char_notify_level_ntf_cfg_ind_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>tuyas_char_notify_level_upd_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_tuya_service.o(i.tuyas_char_notify_level_upd_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>tuyas_char_notify_period_ntf_handler</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, app_tuya_service.o(i.tuyas_char_notify_period_ntf_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = tuyas_char_notify_period_ntf_handler &rArr; app_tuya_send_data &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_send_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>tuyas_char_write_writer_req_handler</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_tuya_service.o(i.tuyas_char_write_writer_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tuyas_char_write_writer_req_handler &rArr; uart_printf &rArr; vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_tuya_service.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>tuya_ble_app_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_tuya.o(i.tuya_ble_app_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = tuya_ble_app_init &rArr; tuya_ble_sdk_init &rArr; tuya_ble_adv_change &rArr; tuya_ble_device_id_encrypt &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_callback_queue_register
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_init
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_sdk_init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tuya_init
</UL>

<P><STRONG><a name="[21]"></a>tuya_cb_handler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_tuya.o(i.tuya_cb_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tuya_cb_handler &rArr; tuya_ble_dp_data_report &rArr; data_2_klvlist &rArr; free_klv_list &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dp_data_report
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_tuya.o(i.tuya_ble_app_init)
</UL>
<P><STRONG><a name="[a0]"></a>file_crc_check_in_flash</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, app_tuya_ota.o(i.file_crc_check_in_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = file_crc_check_in_flash &rArr; tuya_ble_nv_read &rArr; flash_read &rArr; flash_readword
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_read
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_end_req
</UL>

<P><STRONG><a name="[164]"></a>tuya_ota_data_req</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, app_tuya_ota.o(i.tuya_ota_data_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = tuya_ota_data_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_init_disconnect
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_write
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_nv_erase
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
</UL>

<P><STRONG><a name="[165]"></a>tuya_ota_end_req</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, app_tuya_ota.o(i.tuya_ota_end_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = tuya_ota_end_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ota_init_disconnect
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_reset_time_delay_ms
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;file_crc_check_in_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
</UL>

<P><STRONG><a name="[162]"></a>tuya_ota_file_info_req</STRONG> (Thumb, 256 bytes, Stack size 64 bytes, app_tuya_ota.o(i.tuya_ota_file_info_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = tuya_ota_file_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
</UL>

<P><STRONG><a name="[163]"></a>tuya_ota_offset_req</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_tuya_ota.o(i.tuya_ota_offset_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = tuya_ota_offset_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
</UL>

<P><STRONG><a name="[161]"></a>tuya_ota_start_req</STRONG> (Thumb, 78 bytes, Stack size 88 bytes, app_tuya_ota.o(i.tuya_ota_start_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = tuya_ota_start_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_handle_ota_req
</UL>

<P><STRONG><a name="[66]"></a>AddRoundKey</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, tuya_ble_aes.o(i.AddRoundKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AddRoundKey
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvCipher
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cipher
</UL>

<P><STRONG><a name="[5e]"></a>BlockCopy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tuya_ble_aes.o(i.BlockCopy))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_ECB_encrypt
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_encrypt_buffer
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_decrypt_buffer
</UL>

<P><STRONG><a name="[64]"></a>Cipher</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, tuya_ble_aes.o(i.Cipher))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Cipher &rArr; MixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SubBytes
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShiftRows
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixColumns
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRoundKey
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_ECB_encrypt
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_encrypt_buffer
</UL>

<P><STRONG><a name="[60]"></a>InvCipher</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, tuya_ble_aes.o(i.InvCipher))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = InvCipher &rArr; InvMixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvSubBytes
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvShiftRows
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvMixColumns
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRoundKey
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_decrypt_buffer
</UL>

<P><STRONG><a name="[71]"></a>InvMixColumns</STRONG> (Thumb, 966 bytes, Stack size 40 bytes, tuya_ble_aes.o(i.InvMixColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InvMixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xtime
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvCipher
</UL>

<P><STRONG><a name="[6f]"></a>InvShiftRows</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, tuya_ble_aes.o(i.InvShiftRows))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvCipher
</UL>

<P><STRONG><a name="[70]"></a>InvSubBytes</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, tuya_ble_aes.o(i.InvSubBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InvSubBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvCipher
</UL>

<P><STRONG><a name="[5f]"></a>KeyExpansion</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, tuya_ble_aes.o(i.KeyExpansion))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KeyExpansion
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_ECB_encrypt
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_encrypt_buffer
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_decrypt_buffer
</UL>

<P><STRONG><a name="[69]"></a>MixColumns</STRONG> (Thumb, 136 bytes, Stack size 20 bytes, tuya_ble_aes.o(i.MixColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MixColumns
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cipher
</UL>

<P><STRONG><a name="[68]"></a>ShiftRows</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, tuya_ble_aes.o(i.ShiftRows))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cipher
</UL>

<P><STRONG><a name="[67]"></a>SubBytes</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, tuya_ble_aes.o(i.SubBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SubBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cipher
</UL>

<P><STRONG><a name="[61]"></a>XorWithIv</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tuya_ble_aes.o(i.XorWithIv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XorWithIv
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_encrypt_buffer
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_decrypt_buffer
</UL>

<P><STRONG><a name="[72]"></a>xtime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tuya_ble_aes.o(i.xtime))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InvMixColumns
</UL>

<P><STRONG><a name="[12b]"></a>tuya_ble_common_uart_data_unpack</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, tuya_ble_api.o(i.tuya_ble_common_uart_data_unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_common_uart_data_unpack
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8 (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_receive_data
</UL>

<P><STRONG><a name="[96]"></a>ble_data_unpack</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, tuya_ble_data_handler.o(i.ble_data_unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_data_unpack &rArr; trsmitr_recv_pkg_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trsmitr_recv_pkg_decode
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_subpkg_len
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_subpkg
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trsmitr_frame_total_len
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_air_recv_packet_free
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commonData_rx_proc
</UL>

<P><STRONG><a name="[14d]"></a>tuya_ble_handle_dev_info_req</STRONG> (Thumb, 186 bytes, Stack size 120 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_dev_info_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = tuya_ble_handle_dev_info_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_register_key_generate (via BLX)
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rand_generator
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_pair_rand_clear
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[151]"></a>tuya_ble_handle_device_reset_req</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_device_reset_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = tuya_ble_handle_device_reset_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_unbond
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[14c]"></a>tuya_ble_handle_dp_query_req</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_dp_query_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = tuya_ble_handle_dp_query_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[14b]"></a>tuya_ble_handle_dp_write_req</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_dp_write_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = tuya_ble_handle_dp_write_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_klv_list
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_2_klvlist
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[14e]"></a>tuya_ble_handle_pair_req</STRONG> (Thumb, 264 bytes, Stack size 72 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_pair_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = tuya_ble_handle_pair_req &rArr; tuya_ble_commData_send &rArr; tuya_ble_encryption &rArr; tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_save_sys_settings
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_monitor_timer_stop
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gap_disconnect
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_set
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_connect_status_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_adv_change
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_commData_send
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[150]"></a>tuya_ble_handle_unix_time_char_ms_resp</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_unix_time_char_ms_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = tuya_ble_handle_unix_time_char_ms_resp &rArr; atoll &rArr; __strtoll &rArr; _strtoull &rArr; __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rtc_set_timestamp
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_buffer_value_is_all_x
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoll
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[14a]"></a>tuya_ble_handle_unix_time_date_resp</STRONG> (Thumb, 140 bytes, Stack size 56 bytes, tuya_ble_data_handler.o(i.tuya_ble_handle_unix_time_date_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = tuya_ble_handle_unix_time_date_resp &rArr; tuya_ble_mytime_2_utc_sec &rArr; applib_dt_last_day_of_mon &rArr; applib_dt_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_rtc_set_timestamp
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_mytime_2_utc_sec
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_cb_event_send
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_buffer_value_is_all_x
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_evt_process
</UL>

<P><STRONG><a name="[f7]"></a>sys_settings_crc_ok</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tuya_ble_storage.o(i.sys_settings_crc_ok))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sys_settings_crc_ok &rArr; tuya_ble_crc32_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_crc32_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_load_settings
</UL>

<P><STRONG><a name="[87]"></a>applib_dt_is_leap_year</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, tuya_ble_unix_time.o(i.applib_dt_is_leap_year))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = applib_dt_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_mytime_2_utc_sec
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_last_day_of_mon
</UL>

<P><STRONG><a name="[88]"></a>applib_dt_last_day_of_mon</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, tuya_ble_unix_time.o(i.applib_dt_last_day_of_mon))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = applib_dt_last_day_of_mon &rArr; applib_dt_is_leap_year
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;applib_dt_is_leap_year
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_mytime_2_utc_sec
</UL>

<P><STRONG><a name="[10e]"></a>tuya_ble_auc_gpio_test</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_gpio_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tuya_ble_auc_gpio_test &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; uart2_send
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_gpio_test
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[114]"></a>tuya_ble_auc_query_fingerprint</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_query_fingerprint))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = tuya_ble_auc_query_fingerprint &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; uart2_send
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[10d]"></a>tuya_ble_auc_query_hid</STRONG> (Thumb, 104 bytes, Stack size 88 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_query_hid))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = tuya_ble_auc_query_hid &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; uart2_send
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_buffer_value_is_all_x
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[110]"></a>tuya_ble_auc_query_info</STRONG> (Thumb, 422 bytes, Stack size 24 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_query_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = tuya_ble_auc_query_info &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; uart2_send
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[115]"></a>tuya_ble_auc_rssi_test</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_rssi_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tuya_ble_auc_rssi_test &rArr; tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; uart2_send
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_beacon_scan_stop
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_beacon_get_rssi_avg
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[10f]"></a>tuya_ble_auc_write_auth_info</STRONG> (Thumb, 184 bytes, Stack size 96 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_write_auth_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = tuya_ble_auc_write_auth_info &rArr; tuya_ble_storage_write_auth_key_device_id_mac &rArr; tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_prod_asciitohex
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_auth_key_device_id_mac
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[109]"></a>tuya_ble_auc_write_hid</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, tuya_ble_app_production_test.o(i.tuya_ble_auc_write_hid))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tuya_ble_auc_write_hid &rArr; tuya_ble_storage_write_hid &rArr; tuya_ble_storage_save_auth_settings &rArr; tuya_ble_nv_write &rArr; flash_write &rArr; flash_writeword
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_uart_prod_send
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_storage_write_hid
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
</UL>

<P><STRONG><a name="[11c]"></a>tuya_ble_prod_asciitohex</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, tuya_ble_app_production_test.o(i.tuya_ble_prod_asciitohex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tuya_ble_prod_asciitohex
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
</UL>

<P><STRONG><a name="[10c]"></a>tuya_ble_uart_prod_send</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tuya_ble_app_production_test.o(i.tuya_ble_uart_prod_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tuya_ble_uart_prod_send &rArr; tuya_ble_common_uart_send_data &rArr; uart2_send
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_common_uart_send_data
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_check_sum
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_malloc
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_app_production_test_process
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_hid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_write_auth_info
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_rssi_test
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_info
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_hid
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_query_fingerprint
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_auc_gpio_test
</UL>

<P><STRONG><a name="[155]"></a>tuya_ble_gatt_send_queue_free</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tuya_ble_gatt_send_queue.o(i.tuya_ble_gatt_send_queue_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tuya_ble_gatt_send_queue_free &rArr; tuya_ble_free
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_free
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_dequeue
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_gatt_send_data_handle
</UL>

<P><STRONG><a name="[fa]"></a>tuya_ble_Add_Pkcs</STRONG> (ARM, 108 bytes, Stack size 32 bytes, tuya_ble_secure.o(i.tuya_ble_Add_Pkcs))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = tuya_ble_Add_Pkcs
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encrypt_old_with_key
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption
</UL>

<P><STRONG><a name="[100]"></a>tuya_ble_aes128_cbc_encrypt</STRONG> (ARM, 84 bytes, Stack size 24 bytes, tuya_ble_secure.o(i.tuya_ble_aes128_cbc_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = tuya_ble_aes128_cbc_encrypt &rArr; AES128_CBC_encrypt_buffer &rArr; Cipher &rArr; MixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_CBC_encrypt_buffer (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
</UL>

<P><STRONG><a name="[101]"></a>tuya_ble_aes128_ecb_encrypt</STRONG> (ARM, 96 bytes, Stack size 24 bytes, tuya_ble_secure.o(i.tuya_ble_aes128_ecb_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = tuya_ble_aes128_ecb_encrypt &rArr; AES128_ECB_encrypt &rArr; Cipher &rArr; MixColumns
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES128_ECB_encrypt (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encrypt_old_with_key
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_register_key_generate
</UL>

<P><STRONG><a name="[132]"></a>tuya_ble_key_generate</STRONG> (ARM, 580 bytes, Stack size 224 bytes, tuya_ble_secure.o(i.tuya_ble_key_generate))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = tuya_ble_key_generate &rArr; tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via BLX)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via BLX)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via BLX)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_md5_crypt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_aes128_cbc_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_encryption
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_decryption
</UL>

<P><STRONG><a name="[134]"></a>tuya_ble_md5_crypt</STRONG> (ARM, 84 bytes, Stack size 104 bytes, tuya_ble_secure.o(i.tuya_ble_md5_crypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = tuya_ble_md5_crypt &rArr; mbedtls_md5_update &rArr; mbedtls_md5_update_ret &rArr; mbedtls_internal_md5_process
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_finish (via BLX)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_update (via BLX)
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_starts (via BLX)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_init (via BLX)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mbedtls_md5_free (via BLX)
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_device_id_encrypt
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tuya_ble_key_generate
</UL>

<P><STRONG><a name="[78]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[76]"></a>_printf_core</STRONG> (Thumb, 1764 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[7b]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7a]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
